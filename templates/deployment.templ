package templates

import (
	"fmt"
	"github.com/BSFishy/mora-manager/config"
	"github.com/BSFishy/mora-manager/templates/styles"
)

var pktit = map[config.PointKind]string{
	config.String: "text",
	config.Secret: "password",
}

func pointKindToInputType(kind config.PointKind) string {
	inputType, ok := pktit[kind]
	if !ok {
		panic(fmt.Sprintf("invalid point kind: %s", kind))
	}

	return inputType
}

templ Deployment(id string, configPoints []config.Point) {
	@layout("Deployment") {
		<div
			class={ styles.W("100vw"), styles.Minh("100vh"), styles.Flex(), styles.FlexCol(), styles.Align("center"), styles.Justify("center"), styles.Gap(2) }
		>
			@link(templ.Attributes{"href": "/dashboard"}) {
				Home
			}
			if len(configPoints) > 0 {
				<form
					hx-post={ fmt.Sprintf("/htmx/deployment/%s/config", id) }
					class={ styles.Flex(), styles.FlexCol(), styles.Align("center"), styles.Maxw("300px"), styles.Gap(2) }
				>
					for _, point := range configPoints {
						<div>
							<input type="hidden" name="module_name" value={ point.ModuleName }/>
							<input type="hidden" name="identifier" value={ point.Identifier }/>
							<h3 hx-disable class={ styles.TextSize("xl") }>{ point.Name }</h3>
							if point.Description != nil {
								<p hx-disable>{ *point.Description }</p>
							}
							@input(pointKindToInputType(point.Kind), templ.Attributes{"name": "value", "class": templ.Classes(styles.W("100%"))})
						</div>
					}
					@submit(templ.Attributes{}) {
						Submit
					}
				</form>
			}
		</div>
	}
}
