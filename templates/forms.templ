package templates

import "github.com/BSFishy/mora-manager/templates/styles"
import "fmt"

templ textInput(attrs templ.Attributes) {
	@input("text", attrs)
}

templ passwordInput(attrs templ.Attributes) {
	@input("password", attrs)
}

css disabledInputStyles() {
	background-color: { templ.SafeCSSProperty(styles.Slate[50]) };
	border-color: { templ.SafeCSSProperty(styles.Slate[400]) };
}

templ input(inputType string, attrs templ.Attributes) {
	<input
		type={ inputType }
		class={ styles.Bg(styles.Emerald[50]), styles.BorderWidth("3px"), styles.BorderColor(styles.Emerald[600]), styles.Rounded(styles.Radius["md"]), styles.Px(4), styles.Py(2), attrs["class"] }
		{ attrs... }
	/>
}

var buttonStyles = templ.CSSClasses{
	styles.Px(4),
	styles.Py(2),
	styles.Rounded(styles.Radius["md"]),
	styles.Weight("bold"),
	styles.Button(),
	styles.BorderWidth("1px"),
}

var variants = map[string]templ.CSSClasses{
	"default": templ.CSSClasses{
		styles.CursorPointer(),
		styles.Bg(styles.Emerald[600]),
		styles.Color(styles.Emerald[50]),
		styles.BorderColor("transparent"),
	},
	"inverted": templ.CSSClasses{
		styles.CursorPointer(),
		styles.BorderColor(styles.Emerald[600]),
		styles.Color(styles.Emerald[600]),
	},
	"disabled": templ.CSSClasses{
		styles.CursorDefault(),
		styles.Bg(styles.Slate[300]),
		styles.Color(styles.Emerald[50]),
		styles.BorderColor("transparent"),
	},
}

func submitStyles(variant any) templ.CSSClasses {
	if variant == nil {
		variant = "default"
	}

	variantStr, ok := variant.(string)
	if !ok {
		panic(fmt.Sprintf("invalid variant type: %T", variant))
	}

	classes, ok := variants[variantStr]
	if !ok {
		panic(fmt.Sprintf("invalid variant: %s", variant))
	}

	classes = append(classes, buttonStyles...)

	return classes
}

func cleanLinkArgs(attrs templ.Attributes) templ.Attributes {
	if attrs["variant"] == "disabled" {
		delete(attrs, "href")
	}

	return attrs
}

func buttonArgs(attrs templ.Attributes) templ.Attributes {
	if attrs["variant"] == "disabled" {
		attrs["diabled"] = "true"
	}

	return attrs
}

templ submit(attrs templ.Attributes) {
	if attrs["type"] == "link" {
		<a hx-boost="true" class={ submitStyles(attrs["variant"]), attrs["class"] } role="button" { cleanLinkArgs(attrs)... }>
			{ children... }
		</a>
	} else {
		<button
			type="submit"
			class={ submitStyles(attrs["variant"]), attrs["class"] }
			{ buttonArgs(attrs)... }
		>
			{ children... }
		</button>
	}
}
